version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
  jq: circleci/jq@1.9.0
aliases:
  set_git_credentials: &set_git_credentials
    run: |
        git config credential.helper 'cache --timeout=120'
        git config user.email ngChile@circleci
        git config user.name "ngChile Circle Ci Deployment Bot"
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
        - v1-dependencies-{{ checksum "package-lock.json" }}
  save_npm_cache: &save_npm_cache
    save_cache:
      name: Save NPM modules cache
      paths:
        - ./node_modules
      key: v1-dependencies-{{ checksum "package-lock.json" }}

  store_dist: &store_dist
    save_cache:
      name: Save dist folder
      paths:
        - dist
      key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
  
  restore_dist: &restore_dist
    restore_cache:
      name: Restore built dist folder
      keys:
        - v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

  install_node_modules: &install_node_modules
    run:
      name: Install local dependencies
      command: npm ci
      when: always

  show_bash_version: &show_bash_version
    run:
      name: Show current bash version
      command: echo ${BASH_VERSION}
jobs:
  branch-validator:
    machine: true
    working_directory: ~/repo
    steps:
      - <<: *show_bash_version
      - add_ssh_keys:
          fingerprints:
            - "a7:af:f2:47:72:a1:69:7d:d2:9f:fe:c1:81:98:41:88"
      - checkout
      - <<: *set_git_credentials
      - run:
          name: Check Format name of incoming branch
          command: ./ci/branch-validator
      - persist_to_workspace:
          root: ./workspace_variables
          paths:
              - custom-env-variables
  linter:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      # - <<: *restore_npm_cache
      - <<: *install_node_modules
      # - <<: *save_npm_cache
      - run:
          name: Linting
          command: ./ci/linter
  unit-tests:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      # - <<: *restore_npm_cache
      - <<: *install_node_modules
      # - <<: *save_npm_cache
      - run:
          name: Running unit tests
          command: ./ci/unit-tests
      - codecov/upload:
          file: ./coverage/lcov.info
      - store_artifacts:
          path: ./test-results/junit
      - store_artifacts:
          path: ./coverage
      - store_test_results:
          path: ./test-results
  e2e:
    docker:
      - image: cypress/base:10
        environment:
          ## this enables colors in the output
          TERM: xterm
    working_directory: ~/repo
    steps:
      - checkout
      # - <<: *restore_npm_cache
      - <<: *install_node_modules
      # - <<: *save_npm_cache
      - run:
          name: Running e2e tests
          command: bash ./ci/e2e
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace_variables
      # - <<: *restore_npm_cache
      - <<: *install_node_modules
      # - <<: *save_npm_cache
      - run:
          name: Building artifact using ng build
          command: ./ci/build
      - <<: *store_dist
  staging-deploy:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace_variables
      - <<: *restore_dist
      - run:
          name: Deploy Docker Image
          command: ./ci/deploy
      - run:
          name: Deploy to Heroku
          command: ./ci/release
  smoke-test-staging:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace_variables
      - run:
          name: Running Smoke test
          command: ./ci/smoke-test
  production-deploy:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace_variables
      - <<: *restore_dist
      - run:
          name: Deploy Docker Image
          command: ./ci/deploy --prod
      - run:
          name: Deploy to Heroku
          command: ./ci/release --prod
  update-repository:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a7:af:f2:47:72:a1:69:7d:d2:9f:fe:c1:81:98:41:88"
      - checkout
      - attach_workspace:
          at: ./workspace_variables
      # - <<: *restore_npm_cache
      - <<: *install_node_modules
      # - <<: *save_npm_cache
      - <<: *set_git_credentials
      - run:
          name: Updating repository
          command: ./ci/update-repository
workflows:
  version: 2
  angular-chile-pipeline:
    jobs:
      - branch-validator
      # - linter:
      #     requires:
      #       - branch-validator
      # - unit-tests:
      #     requires:
      #       - branch-validator
      # - e2e:
      #     requires:
      #       - branch-validator
      # - build:
      #     requires:
      #       - linter
      #       - unit-tests
      #       - e2e
      # - staging-deploy:
      #     requires:
      #       - build
      - staging-deploy
      - smoke-test-staging:
          requires:
            - staging-deploy
      # - production-approval:
      #     type: approval
      #     requires:
      #       - smoke-test-staging
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - production-deploy:
      #     requires:
      #       - production-approval
      #     filters:
      #       branches:
      #         only:
      #           - master
      # TODO1: smoke test production should check if all it is ok. if error exists, the docker image should be rollback.
      # TODO2: a functional tests suite should check if all it is ok in production.
      # - update-repository:
      #     requires:
      #       - production-deploy
      #     filters:
      #       branches:
      #         only:
      #           - master
